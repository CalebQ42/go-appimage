dist: bionic
language: go

go:
- "1.13"

git:
  depth: 1

script:
  - sudo apt-get -y update
  - sudo apt-get -y install gcc-multilib g++-multilib psmisc dbus-x11
  - sudo apt-get -y install gcc-arm-linux-gnueabi
  - sudo apt-get -y install gcc-aarch64-linux-gnu 
  - if [ $(go env GOHOSTARCH) == "amd64" ] ; then wget -c -q https://github.com/upx/upx/releases/download/v3.95/upx-3.95-amd64_linux.tar.xz ; fi
  - if [ $(go env GOHOSTARCH) == "arm64" ] ; then wget -c -q https://github.com/upx/upx/releases/download/v3.95/upx-3.95-arm64_linux.tar.xz ; fi
  - tar xf upx-*_linux.tar.xz
  - export PATH=$(readlink -f upx-*_linux/):$PATH
  - export GO111MODULE=off # Needed?
  - go get github.com/probonopd/appimage/src/appimagetool
  - env CGO_ENABLED=1 GOOS=linux GOARCH=386 go build -trimpath -ldflags="-s -w" github.com/probonopd/appimage/src/appimaged
  - upx -9 appimagetool
  - mv ./appimagetool ./appimagetool-386
  - go build -trimpath -ldflags="-s -w" appimagetool.go
  - upx -9 appimagetool
  - mv ./appimagetool ./appimagetool-amd64
  - env CC=arm-linux-gnueabi-gcc CGO_ENABLED=1 GOOS=linux GOARCH=arm32 go build -trimpath -ldflags="-s -w" github.com/probonopd/appimage/src/appimaged
  - upx -9 appimagetool
  - mv ./appimagetool ./appimagetool-arm32
  - env CC=aarch64-linux-gnu CGO_ENABLED=1 GOOS=linux GOARCH=arm64 go build -trimpath -ldflags="-s -w" github.com/probonopd/appimage/src/appimaged
  - upx -9 appimagetool
  - mv ./appimagetool ./appimagetool-arm64
  - go get github.com/probonopd/appimage/src/zsyncmake
  - env CGO_ENABLED=1 GOOS=linux GOARCH=386 go build -trimpath -ldflags="-s -w" github.com/probonopd/appimage/src/appimaged
  - upx -9 zsyncmake
  - mv ./zsyncmake ./zsyncmake-386
  - go build -trimpath -ldflags="-s -w" zsyncmake.go
  - upx -9 zsyncmake
  - mv ./zsyncmake ./zsyncmake-amd64
  - env CC=arm-linux-gnueabi-gcc CGO_ENABLED=1 GOOS=linux GOARCH=arm32 go build -trimpath -ldflags="-s -w" github.com/probonopd/appimage/src/appimaged
  - upx -9 zsyncmake
  - mv ./zsyncmake ./zsyncmake-arm32
  - env CC=aarch64-linux-gnu CGO_ENABLED=1 GOOS=linux GOARCH=arm64 go build -trimpath -ldflags="-s -w" github.com/probonopd/appimage/src/appimaged
  - upx -9 zsyncmake
  - mv ./zsyncmake ./zsyncmake-arm64
  - go get github.com/probonopd/appimage/src/appimaged
  - env CGO_ENABLED=1 GOOS=linux GOARCH=386 go build -trimpath -ldflags="-s -w" github.com/probonopd/appimage/src/appimaged
  - upx -9 appimaged
  - mv ./appimaged ./appimaged-386
  - go build -trimpath -ldflags="-s -w" appimaged.go
  - upx -9 appimaged
  - mv ./appimaged ./appimaged-amd64
  - env CC=arm-linux-gnueabi-gcc CGO_ENABLED=1 GOOS=linux GOARCH=arm32 go build -trimpath -ldflags="-s -w" github.com/probonopd/appimage/src/appimaged
  - upx -9 appimaged
  - mv ./appimaged ./appimaged-arm32
  - env CC=aarch64-linux-gnu CGO_ENABLED=1 GOOS=linux GOARCH=arm64 go build -trimpath -ldflags="-s -w" github.com/probonopd/appimage/src/appimaged
  - upx -9 appimaged
  - mv ./appimaged ./appimaged-arm64
  # Test run
  - ./appimaged-amd64 &
  - sleep 10
  - killall appimaged

after_success:
  - wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh
  - bash upload.sh *.386 *amd64 *arm32 *arm64
  
branches:
  except:
    - # Do not build tags that we create when we upload to GitHub Releases
    - /^(?i:continuous)/

#cache:
#  directories:
#    - $HOME/gopath/src
