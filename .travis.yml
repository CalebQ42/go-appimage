dist: xenial
language: none

# Not clear from https://blog.travis-ci.com/2019-10-07-multi-cpu-architecture-support
# whether this works in this way. How can we access the architecture within build scripts?
arch:
  - amd64
  - arm64

git:
  depth: 1

script:
  - unset GOARCH GOBIN GOEXE GOHOSTARCH GOHOSTOS GOOS GORACE GOROOT GOTOOLDIR CC GOGCCFLAGS CGO_ENABLED # https://github.com/purpleidea/mgmt/issues/561
  - export GOPATH=$HOME/go # https://github.com/purpleidea/mgmt/issues/561
  - if [ "aarch64" == "$TRAVIS_ARCH" ] ; then export ARCH=arm64 ; fi
  - if [ "amd64" == "$TRAVIS_ARCH" ] ; then export ARCH=amd64 ; fi
  - wget -q https://dl.google.com/go/go1.13.4.linux-$ARCH.tar.gz
  - sudo tar -C /usr/local -xzf go*.tar.gz
  - export PATH=/usr/local/go/bin:$PATH
  - go get gopkg.in/fsnotify.v1 # https://github.com/purpleidea/mgmt/issues/561
  - mkdir -p $GOPATH/src/github.com/purpleidea/mgmt/vendor/gopkg.in/ # https://github.com/purpleidea/mgmt/issues/561
  - ln -s $(readlink -f $GOPATH/src/gopkg.in/fsnotify.v1) $(readlink -f $GOPATH/src/github.com/purpleidea/mgmt/vendor/gopkg.in/fsnotify.v1) # https://github.com/purpleidea/mgmt/issues/561
  - if [ $(go env GOHOSTARCH) == "amd64" ] ; then sudo apt-get -y install gcc-multilib g++-multilib ; fi
  - if [ $(go env GOHOSTARCH) == "amd64" ] ; then wget -c -q https://github.com/upx/upx/releases/download/v3.95/upx-3.95-amd64_linux.tar.xz ; fi
  - if [ $(go env GOHOSTARCH) == "arm64" ] ; then sudo apt-get -y install gcc-arm-linux-gnueabi ; fi
  - if [ $(go env GOHOSTARCH) == "arm64" ] ; then wget -c -q https://github.com/upx/upx/releases/download/v3.95/upx-3.95-arm64_linux.tar.xz ; fi
  - tar xf upx-*_linux.tar.xz
  - export PATH=$(readlink -f upx-*_linux/):$PATH
  - sudo apt-get -y install psmisc dbus-x11 # killall, dbus-launch
  - export GO111MODULE=off
  - go get github.com/probonopd/appimage/src/appimagetool
  - go build -trimpath -ldflags="-s -w" github.com/probonopd/appimage/src/appimagetool
  - upx -9 appimagetool
  - ./appimagetool
  - go get github.com/probonopd/appimage/src/zsyncmake
  - go build -trimpath -ldflags="-s -w" github.com/probonopd/appimage/src/zsyncmake
  - upx -9 zsyncmake
  - ./zsyncmake || true
  - go get github.com/probonopd/appimage/src/appimaged || true # This fails
  - go build -trimpath -ldflags="-s -w" github.com/probonopd/appimage/src/appimaged
  - upx -9 appimaged
  - mv ./appimaged appimaged-$(go env GOHOSTARCH)
  - if [ $(go env GOHOSTARCH) == "amd64" ] ; then env CGO_ENABLED=1 GOOS=linux GOARCH=386 go build -trimpath -ldflags="-s -w" github.com/probonopd/appimage/src/appimaged ; fi
  - if [ $(go env GOHOSTARCH) == "amd64" ] ; then upx -9 ./appimaged ; fi
  - if [ $(go env GOHOSTARCH) == "amd64" ] ; then mv ./appimaged appimaged-386 ; fi
  - if [ $(go env GOHOSTARCH) == "arm64" ] ; then env CC=arm-linux-gnueabi-gcc CGO_ENABLED=1 GOOS=linux GOARCH=arm GOARM=5 go build -trimpath -ldflags="-s -w" github.com/probonopd/appimage/src/appimaged ; fi
  - if [ $(go env GOHOSTARCH) == "arm64" ] ; then upx -9 ./appimaged ; fi
  - if [ $(go env GOHOSTARCH) == "arm64" ] ; then mv ./appimaged appimaged-arm ; fi

after_success:
  - wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh
  - bash upload.sh appimaged-*
  
branches:
  except:
    - # Do not build tags that we create when we upload to GitHub Releases
    - /^(?i:continuous)/

#cache:
#  directories:
#    - $HOME/gopath/src
