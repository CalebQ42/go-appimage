dist: xenial
language: go

# Not clear from https://blog.travis-ci.com/2019-10-07-multi-cpu-architecture-support
# whether this works in this way. How can we access the architecture within build scripts?
arch:
  - amd64
  - i386
  - arm64
  - arm32
  
go:
- "1.13"

git:
  depth: 1

script:
  - wget -c -q https://github.com/upx/upx/releases/download/v3.95/upx-3.95-amd64_linux.tar.xz
  - tar xf upx-*_linux.tar.xz
  - export PATH=$(readlink -f upx-*_linux/):$PATH
  - sudo apt-get -y install psmisc dbus-x11 # killall, dbus-launch
  - export GO111MODULE=on # Needed?
  - cd src/appimagetool/
  - go build -trimpath -ldflags="-s -w" appimagetool.go
  - upx -9 appimagetool
  - ls -lh ./appimagetool
  - ./appimagetool
  - cd -
  - cd src/zsyncmake/
  - go build -trimpath -ldflags="-s -w" zsyncmake.go
  - upx -9 zsyncmake
  - ls -lh ./zsyncmake
  - ./zsyncmake || true
  - cd -
  - cd src/appimaged/
  - go build -trimpath -ldflags="-s -w" appimaged.go
  - upx -9 appimaged
  - ls -lh ./appimaged
  - ./appimaged &
  - sleep 10
  - killall appimaged
  - cd -
  - ARCH=$(arch)
  - cp ./src/appimaged/appimaged appimaged-$ARCH

after_success:
  - wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh
  - bash upload.sh appimaged-*
  
branches:
  except:
    - # Do not build tags that we create when we upload to GitHub Releases
    - /^(?i:continuous)/

cache:
  directories:
    - $HOME/gopath/src
