dist: xenial
language: minimal

arch:
  - amd64
  - arm64

git:
  depth: 1

script:
  - unset GOARCH GOBIN GOEXE GOHOSTARCH GOHOSTOS GOOS GORACE GOROOT GOTOOLDIR CC GOGCCFLAGS CGO_ENABLED
  - export GOPATH=$HOME/go
  - export COMMIT="${TRAVIS_BUILD_NUMBER}" # "${TRAVIS_JOB_WEB_URL} on $(date +'%Y-%m-%d_%T')"
  - export VERSION=$TRAVIS_BUILD_NUMBER
  - if [ "aarch64" == "$TRAVIS_ARCH" ] ; then export ARCH=arm64 ; fi
  - if [ "amd64" == "$TRAVIS_ARCH" ] ; then export ARCH=amd64 ; fi
  - wget -q https://dl.google.com/go/go1.13.4.linux-$ARCH.tar.gz
  - sudo tar -C /usr/local -xzf go*.tar.gz
  - export PATH=/usr/local/go/bin:$PATH
  - if [ $(go env GOHOSTARCH) == "amd64" ] ; then sudo apt-get -y install gcc-multilib g++-multilib autoconf ; fi
  # if [ $(go env GOHOSTARCH) == "amd64" ] ; then wget -c -q https://github.com/upx/upx/releases/download/v3.95/upx-3.95-amd64_linux.tar.xz ; fi
  - if [ $(go env GOHOSTARCH) == "arm64" ] ; then sudo apt-get -y install gcc-arm-linux-gnueabi autoconf ; fi
  # if [ $(go env GOHOSTARCH) == "arm64" ] ; then wget -c -q https://github.com/upx/upx/releases/download/v3.95/upx-3.95-arm64_linux.tar.xz ; fi
  # tar xf upx-*_linux.tar.xz
  - export PATH=$(readlink -f upx-*_linux/):$PATH
  # export GO111MODULE=off
  # appimagetool
  - go get -v github.com/probonopd/go-appimage/src/appimagetool
  - go build -trimpath -ldflags="-s -w -X main.commit=$COMMIT" github.com/probonopd/go-appimage/src/appimagetool
  # upx -9 appimagetool
  - mv ./appimagetool appimagetool-$(go env GOHOSTARCH)
  - if [ $(go env GOHOSTARCH) == "amd64" ] ; then env CGO_ENABLED=1 GOOS=linux GOARCH=386 go build -trimpath -ldflags="-s -w -X main.commit=$COMMIT" github.com/probonopd/go-appimage/src/appimagetool ; fi
  # if [ $(go env GOHOSTARCH) == "amd64" ] ; then upx -9 ./appimagetool ; fi
  - if [ $(go env GOHOSTARCH) == "amd64" ] ; then mv ./appimagetool appimagetool-386 ; fi
  - if [ $(go env GOHOSTARCH) == "arm64" ] ; then env CC=arm-linux-gnueabi-gcc CGO_ENABLED=1 GOOS=linux GOARCH=arm GOARM=5 go build -trimpath -ldflags="-s -w -X main.commit=$COMMIT" github.com/probonopd/go-appimage/src/appimagetool ; fi
  # if [ $(go env GOHOSTARCH) == "arm64" ] ; then upx -9 ./appimagetool ; fi
  - if [ $(go env GOHOSTARCH) == "arm64" ] ; then mv ./appimagetool appimagetool-arm ; fi
  # appimaged
  - go get -v github.com/probonopd/go-appimage/src/appimaged || true # FIXME: Why does this comand return a non-0 exit status?
  - ( cd $GOPATH/src/github.com/srwiley/oksvg ; git checkout gradfix ) # FIXME: This is probably not the way to do it
  - go build -trimpath -ldflags="-s -w -X main.commit=$COMMIT" github.com/probonopd/go-appimage/src/appimaged
  # upx -9 appimaged
  - mv ./appimaged appimaged-$(go env GOHOSTARCH)
  - if [ $(go env GOHOSTARCH) == "amd64" ] ; then env CGO_ENABLED=1 GOOS=linux GOARCH=386 go build -trimpath -ldflags="-s -w -X main.commit=$COMMIT" github.com/probonopd/go-appimage/src/appimaged ; fi
  # if [ $(go env GOHOSTARCH) == "amd64" ] ; then upx -9 ./appimaged ; fi
  - if [ $(go env GOHOSTARCH) == "amd64" ] ; then mv ./appimaged appimaged-386 ; fi
  - if [ $(go env GOHOSTARCH) == "arm64" ] ; then env CC=arm-linux-gnueabi-gcc CGO_ENABLED=1 GOOS=linux GOARCH=arm GOARM=5 go build -trimpath -ldflags="-s -w -X main.commit=$COMMIT" github.com/probonopd/go-appimage/src/appimaged ; fi
  # if [ $(go env GOHOSTARCH) == "arm64" ] ; then upx -9 ./appimaged ; fi
  - if [ $(go env GOHOSTARCH) == "arm64" ] ; then mv ./appimaged appimaged-arm ; fi
  # Eat our own dogfood, use appimagetool to make AppImages
  - unset ARCH # It contains "amd64" which we cannot use since we need "x86_64"
  - |
    if [ $(go env GOHOSTARCH) == "amd64" ] ; then
    # appimagetool
    mkdir -p appimagetool.AppDir/usr/bin
    ( cd appimagetool.AppDir/usr/bin/ ; wget -c https://github.com/probonopd/static-tools/releases/download/continuous/desktop-file-validate )
    ( cd appimagetool.AppDir/usr/bin/ ; wget -c https://github.com/probonopd/static-tools/releases/download/continuous/mksquashfs )
    ( cd appimagetool.AppDir/usr/bin/ ; wget -c https://github.com/AppImage/AppImageKit/releases/download/continuous/runtime-x86_64 )
    ( cd appimagetool.AppDir/usr/bin/ ; wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh -O uploadtool )
    wget https://github.com/NixOS/patchelf/archive/0.9.tar.gz # 0.10 cripples my files, puts XXXXX inside
    tar xf 0.9.tar.gz 
    cd patchelf-*/
    ./bootstrap.sh
    ./configure --prefix=/usr
    make -j$(nproc) LDFLAGS=-static
    strip src/patchelf
    cd -
    mkdir -p appimagetool.AppDir/usr/bin
    cp patchelf-*/src/patchelf appimagetool.AppDir/usr/bin/
    chmod +x appimagetool.AppDir/usr/bin/*
    cp appimagetool-amd64 appimagetool.AppDir/usr/bin/appimagetool
    ( cd appimagetool.AppDir/ ; ln -s usr/bin/appimagetool AppRun)
    cp data/appimage.png appimagetool.AppDir/
    cat > appimagetool.AppDir/appimagetool.desktop <<\EOF
    [Desktop Entry]
    Type=Application
    Name=appimagetool
    Exec=appimagetool
    Comment=Tool to generate AppImages from AppDirs
    Icon=appimage
    Categories=Development;
    Terminal=true
    EOF
    PATH=./appimagetool.AppDir/usr/bin/:$PATH appimagetool ./appimagetool.AppDir
    fi
  # Recursively eat our own dogfood, use the appimagetool AppImage to make AppImages
  - |
    if [ $(go env GOHOSTARCH) == "amd64" ] ; then
    # appimaged
    mkdir -p appimaged.AppDir/usr/bin
    ( cd appimaged.AppDir/usr/bin/ ; wget -c https://github.com/probonopd/static-tools/releases/download/continuous/bsdtar )
    ( cd appimaged.AppDir/usr/bin/ ; wget -c https://github.com/probonopd/static-tools/releases/download/continuous/unsquashfs )
    chmod +x appimaged.AppDir/usr/bin/*
    cp appimaged-amd64 appimaged.AppDir/usr/bin/appimaged
    ( cd appimaged.AppDir/ ; ln -s usr/bin/appimaged AppRun)
    cp data/appimage.png appimaged.AppDir/
    cat > appimaged.AppDir/appimaged.desktop <<\EOF
    [Desktop Entry]
    Type=Application
    Name=appimaged
    Exec=appimaged
    Comment=Optional daemon that integrates AppImages into the system
    Icon=appimage
    Categories=Utility;
    Terminal=true
    NoDisplay=true
    EOF
    ./appimagetool-*-x86_64.AppImage ./appimaged.AppDir
    fi

branches:
  except:
    # Do not build tags that we create when we upload to GitHub Releases
    - /^(?i:continuous)/

cache:
  directories:
    - $HOME/.cache/go-build # https://restic.net/blog/2018-09-02/travis-build-cache
    - $HOME/gopath/pkg/mod # https://restic.net/blog/2018-09-02/travis-build-cache
    - $GOPATH/pkg/mod # https://evilmartians.com/chronicles/speeding-up-go-modules-for-docker-and-ci
#   - $HOME/gopath/src # This is where my code gets downloaded to as well, so maybe not the best solution
